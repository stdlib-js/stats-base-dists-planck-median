{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar ln = require( '@stdlib/math-base-special-ln' );\n\n\n// MAIN //\n\n/**\n* Returns the median of a Planck distribution.\n*\n* @param {PositiveNumber} lambda - shape parameter\n* @returns {NonNegativeInteger} median\n*\n* @example\n* var v = median( 0.1 );\n* // returns 6\n*\n* @example\n* var v = median( 1.5 );\n* // returns 0\n*\n* @example\n* var v = median( -1.1 );\n* // returns NaN\n*\n* @example\n* var v = median( NaN );\n* // returns NaN\n*/\nfunction median( lambda ) {\n\tif ( isnan( lambda ) || lambda <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\treturn ceil( -ln( 0.5 ) / lambda ) - 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = median;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Planck distribution median.\n*\n* @module @stdlib/stats-base-dists-planck-median\n*\n* @example\n* var median = require( '@stdlib/stats-base-dists-planck-median' );\n*\n* var v = median( 0.1 );\n* // returns 6\n*\n* v = median( 1.5 );\n* // returns 0\n*/\n\n// MODULES //\n\nvar median = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = median;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAO,QAAS,gCAAiC,EACjDC,EAAK,QAAS,8BAA+B,EA2BjD,SAASC,EAAQC,EAAS,CACzB,OAAKJ,EAAOI,CAAO,GAAKA,GAAU,EAC1B,IAEDH,EAAM,CAACC,EAAI,EAAI,EAAIE,CAAO,EAAI,CACtC,CAKAL,EAAO,QAAUI,ICxBjB,IAAIE,EAAS,IAKb,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "ceil", "ln", "median", "lambda", "median"]
}
